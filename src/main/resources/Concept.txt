#### general
storm designed by twitter then become apache open source.
implemented by clojure language.

#### component
Nimbus job tracker or master. Nimbus is Thrift service. can be called by different language.
Nimbus daemon and supervisor daemon can restart nimbus and supervisor.

topologies is graph computing like job in spark
worker supervisor daemon

Stream unbound sequences of tuple
spouts source of stream. both reliable and unreliable source. spout can emit more than a stream.
bolts consumer of stream

one executor is a thread.
a task is one execution flow. one executor can run several tasks since 0.8 and
the new model can decouple thread from task, so new model can scale up/out better.

there are many system thread running at worker, such as emit thread.
system spout to send tick tuple.

#### Grouping
how stream is partitioned among bolt's tasks.
1. shuffle grouping: random partition
2. Fields grouping: partition according to one field. then each bolt deal with tuple of same field value
3. partial key grouping: field grouping and load balance
4. all grouping: replicated to all bolts
5. global grouping: stream go to single bolt
6 none grouping: currently equal to shuffle one.
7 direct grouping: producer decide which bolt deal with stream
8 local or grouping: if bolt has more tasks in same worker process,
tuple just shuffle in-process tasks.
如果目标bolt有一个或者多个task与源bolt的task在同一个工作进程中，
tuple将会被随机发送给这些同进程中的tasks。否则，和普通的Shuffle Grouping行为一致。

#### Implementation
the message between spout and bolt is via tcp, ZeroMQ system.


#### ACK mechanism  http://www.tuicool.com/articles/vErmIb
message process tree: any message from spout and then all following process can be
viewed as a process tree.
In storm, we have ack mechanism to trace if all nodes in the message process tree deal
with message and tuple successfully.

the implementation details of ack:
there is an ack bolt to trace each tuple 's tuple tree.
by xor all tuple id generated and tuple id dealt, then judge if all done (tricky and smart method)




#### key parts of storm design
1. tuple data structure
2. message via zero MQ
3. task scheduler nimbus supervisor
4. ack to guarantee message consumed. ack bolt.
5. two extension drpc and trident. drpc server
6. grouping or shuffle.
7. transaction to guarantee exact once more than at least once.
8. storm 's HA mechanism and how cooperate with zookeeper.
9. slide window. we can set TOPOLOGY_TICK_TUPLE_FREQ_SECS.
then each several seconds, we got a tick tuple message.
then slide window can be realized.


#### slot and supervisor and worker.
supervisor represent a worker node. it is a physical / virtual machine.
slot is the place that worker can run at the container.
slot is like the resource allocated for worker.
so you can set more than one slots for a supervisor if the configuration of
supervisor is good enough.

worker is a working process can run if slot available.
and worker can run several spout/bolt since it can run several threads.

spout and bolt is single thread.
